{"ast":null,"code":"var token;var expiration;var clientID='636dfc0f06d648c1bebf682b8b2a50a5';//const redirectURL = 'http://localhost:3000/'; for local development\nvar redirectURL='https://sucolova.surge.sh';var spotify={getAccesToken:function getAccesToken(){if(token)return token;if(window.location.href.match(/access_token=([^&]*)/)&&window.location.href.match(/expires_in=([^&]*)/)){token=window.location.href.match(/access_token=([^&]*)/);token=token[1];expiration=window.location.href.match(/expires_in=([^&]*)/);expiration=Number(expiration[1]);window.setTimeout(function(){return token='';},expiration*1000);window.history.pushState('Acces Token',null,'/');return token;}else{window.location=\"https://accounts.spotify.com/authorize?client_id=\".concat(clientID,\"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirectURL);}},search:function search(term){var accesToken=spotify.getAccesToken();return fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(term),{headers:{Authorization:\"Bearer \".concat(accesToken)}}).then(function(response){return response.json();}).then(function(jsonResponse){if(!jsonResponse.tracks){return[];}return jsonResponse.tracks.items.map(function(track){return{id:track.id,name:track.name,artist:track.artists[0].name,album:track.album.name,uri:track.uri};});});},savePlaylist:function savePlaylist(playlistName,trackURIsArray){if(!playlistName&&!trackURIsArray)return;var accesToken=token;var options={headers:{Authorization:\"Bearer \".concat(accesToken)},method:'POST',name:'test'};var headers=options.headers;var userID;fetch(\"https://api.spotify.com/v1/me\",{headers:headers}).then(function(response){return response.json();}).then(function(jsonResponse){return jsonResponse.id;}).then(function(jsonResponseId){userID=jsonResponseId;return fetch(\"https://api.spotify.com/v1/users/\".concat(userID,\"/playlists\"),{headers:headers,method:\"POST\",body:JSON.stringify({name:playlistName})});}).then(function(response){return response.json();}).then(function(jsonResponse){console.log(jsonResponse.id);return jsonResponse.id;}).then(function(playlistID){fetch(\"https://api.spotify.com/v1/playlists/\".concat(playlistID,\"/tracks\"),{headers:headers,method:\"POST\",body:JSON.stringify({uris:trackURIsArray})});});}};export default spotify;","map":{"version":3,"names":["token","expiration","clientID","redirectURL","spotify","getAccesToken","window","location","href","match","Number","setTimeout","history","pushState","search","term","accesToken","fetch","headers","Authorization","then","response","json","jsonResponse","tracks","items","map","track","id","name","artist","artists","album","uri","savePlaylist","playlistName","trackURIsArray","options","method","userID","jsonResponseId","body","JSON","stringify","console","log","playlistID","uris"],"sources":["/home/sucolova/Documents/projects/jamming/src/util/Spotify.js"],"sourcesContent":["let token;\nlet expiration;\nconst clientID = '636dfc0f06d648c1bebf682b8b2a50a5';\n//const redirectURL = 'http://localhost:3000/'; for local development\nconst redirectURL = 'https://sucolova.surge.sh'\n\nconst spotify = {\n  getAccesToken() {\n    if (token) return token;\n    if (window.location.href.match(/access_token=([^&]*)/) && window.location.href.match(/expires_in=([^&]*)/)) {\n      token = window.location.href.match(/access_token=([^&]*)/);\n      token = token[1];\n      expiration = window.location.href.match(/expires_in=([^&]*)/);\n      expiration = Number(expiration[1]);\n      window.setTimeout(() => token = '', expiration * 1000);\n      window.history.pushState('Acces Token', null, '/');\n      return token;\n    } else {\n      window.location = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURL}`;\n    }\n  },\n\n  search(term) {\n    const accesToken = spotify.getAccesToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: `Bearer ${accesToken}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }));\n    })\n\n  },\n\n  savePlaylist(playlistName, trackURIsArray) {\n    if(!playlistName && !trackURIsArray) return; \n    const accesToken = token;\n    const options = {\n      headers: {\n        Authorization: `Bearer ${accesToken}` \n      },\n      method: 'POST',\n      name: 'test'\n    };\n    const headers = options.headers;\n    let userID; \n    fetch(`https://api.spotify.com/v1/me`, {headers}).then( response => {\n      return response.json();\n    }).then(jsonResponse => {\n      return jsonResponse.id;\n    }).then(jsonResponseId => {\n      userID = jsonResponseId;\n      return fetch(`https://api.spotify.com/v1/users/${userID}/playlists`, \n        {\n          headers: headers,\n          method: \"POST\",\n          body: JSON.stringify({name: playlistName}) \n        })\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      console.log(jsonResponse.id);\n      return jsonResponse.id;\n    }).then(playlistID => {\n      fetch(`https://api.spotify.com/v1/playlists/${playlistID}/tracks`,\n        {\n          headers: headers,\n          method: \"POST\",\n          body: JSON.stringify({uris: trackURIsArray})\n        })\n    })\n  }\n};\n\n\nexport default spotify;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}