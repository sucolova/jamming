{"ast":null,"code":"let token;\nlet expiration;\nconst clientID = '636dfc0f06d648c1bebf682b8b2a50a5';\nconst redirectURL = 'http://localhost:3000/'; //const redirectURL = 'https://sucolova.surge.sh'\n\nlet expirationTime;\nconst spotify = {\n  // check if token is in href\n  // if not return\n  // if it is, set session const to expiration date + dateNow\n  //\n  // for reload : \n  //  - check if href is the same,\n  //    - if not: new session const\n  //    - if same : setTimeout datenow + exp - datenw\n  checkLoginState() {\n    console.log('inside checkliginState');\n\n    if (!window.location.href.match(/access_token=([^&]*)/) && !window.location.href.match(/expires_in=([^&]*)/)) {\n      return;\n    } else {\n      expirationTime = window.location.href.match(/expires_in=([^&]*)/);\n      expirationTime = Number(expirationTime[1]) * 1000 + Date.now();\n      window.setTimeout(() => {\n        token = '';\n        window.history.pushState('Acces Token', null, '/');\n      }, expirationTime - Date.now());\n      console.log(expirationTime);\n    }\n  },\n\n  getAccesToken() {\n    if (token) return token;\n\n    if (window.location.href.match(/access_token=([^&]*)/) && window.location.href.match(/expires_in=([^&]*)/)) {\n      token = window.location.href.match(/access_token=([^&]*)/);\n      token = token[1];\n      return token;\n    } else {\n      window.location = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURL}`;\n    }\n  },\n\n  search(term) {\n    const accesToken = spotify.getAccesToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: `Bearer ${accesToken}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }));\n    });\n  },\n\n  savePlaylist(playlistName, trackURIsArray) {\n    if (!playlistName && !trackURIsArray) return;\n    const accesToken = token;\n    const options = {\n      headers: {\n        Authorization: `Bearer ${accesToken}`\n      },\n      method: 'POST',\n      name: 'test'\n    };\n    const headers = options.headers;\n    let userID;\n    fetch(`https://api.spotify.com/v1/me`, {\n      headers\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      return jsonResponse.id;\n    }).then(jsonResponseId => {\n      userID = jsonResponseId;\n      return fetch(`https://api.spotify.com/v1/users/${userID}/playlists`, {\n        headers: headers,\n        method: \"POST\",\n        body: JSON.stringify({\n          name: playlistName\n        })\n      });\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      console.log(jsonResponse.id);\n      return jsonResponse.id;\n    }).then(playlistID => {\n      fetch(`https://api.spotify.com/v1/playlists/${playlistID}/tracks`, {\n        headers: headers,\n        method: \"POST\",\n        body: JSON.stringify({\n          uris: trackURIsArray\n        })\n      });\n    });\n  }\n\n};\nexport default spotify;","map":{"version":3,"names":["token","expiration","clientID","redirectURL","expirationTime","spotify","checkLoginState","console","log","window","location","href","match","Number","Date","now","setTimeout","history","pushState","getAccesToken","search","term","accesToken","fetch","headers","Authorization","then","response","json","jsonResponse","tracks","items","map","track","id","name","artist","artists","album","uri","savePlaylist","playlistName","trackURIsArray","options","method","userID","jsonResponseId","body","JSON","stringify","playlistID","uris"],"sources":["/home/sucolova/Documents/projects/jamming/src/util/Spotify.js"],"sourcesContent":["let token;\nlet expiration;\nconst clientID = '636dfc0f06d648c1bebf682b8b2a50a5';\nconst redirectURL = 'http://localhost:3000/';\n//const redirectURL = 'https://sucolova.surge.sh'\nlet expirationTime;\n\nconst spotify = {\n\n  // check if token is in href\n  // if not return\n  // if it is, set session const to expiration date + dateNow\n  //\n  // for reload : \n  //  - check if href is the same,\n  //    - if not: new session const\n  //    - if same : setTimeout datenow + exp - datenw\n  checkLoginState() {\n    console.log('inside checkliginState');\n    if (!window.location.href.match(/access_token=([^&]*)/) && !window.location.href.match(/expires_in=([^&]*)/)) {\n      return;\n    } else {\n      expirationTime = window.location.href.match(/expires_in=([^&]*)/);\n      expirationTime = Number(expirationTime[1]) * 1000 + Date.now();\n      window.setTimeout(() => {token = ''; window.history.pushState('Acces Token', null, '/');}, expirationTime - Date.now());\n      console.log(expirationTime);\n\n    }\n  },\n\n  getAccesToken() {\n    if (token) return token;\n    if (window.location.href.match(/access_token=([^&]*)/) && window.location.href.match(/expires_in=([^&]*)/)) {\n      token = window.location.href.match(/access_token=([^&]*)/);\n      token = token[1];\n      return token;\n    } else {\n      window.location = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURL}`;\n    }\n  },\n\n  search(term) {\n    const accesToken = spotify.getAccesToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: `Bearer ${accesToken}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }));\n    })\n\n  },\n\n  savePlaylist(playlistName, trackURIsArray) {\n    if(!playlistName && !trackURIsArray) return; \n    const accesToken = token;\n    const options = {\n      headers: {\n        Authorization: `Bearer ${accesToken}` \n      },\n      method: 'POST',\n      name: 'test'\n    };\n    const headers = options.headers;\n    let userID; \n    fetch(`https://api.spotify.com/v1/me`, {headers}).then( response => {\n      return response.json();\n    }).then(jsonResponse => {\n      return jsonResponse.id;\n    }).then(jsonResponseId => {\n      userID = jsonResponseId;\n      return fetch(`https://api.spotify.com/v1/users/${userID}/playlists`, \n        {\n          headers: headers,\n          method: \"POST\",\n          body: JSON.stringify({name: playlistName}) \n        })\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      console.log(jsonResponse.id);\n      return jsonResponse.id;\n    }).then(playlistID => {\n      fetch(`https://api.spotify.com/v1/playlists/${playlistID}/tracks`,\n        {\n          headers: headers,\n          method: \"POST\",\n          body: JSON.stringify({uris: trackURIsArray})\n        })\n    })\n  }\n};\n\n\nexport default spotify;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}